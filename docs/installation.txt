============
Installation
============

GeoNode 2.4 is required in order to make the Landscape GeoPortal to work although GeoNode is not modified and can be upgraded in a second time as long as there’s compatibility between GeoNode and the GeoPortal internal logic.

Installation in production mode
===============================

To install GeoNode on Ubuntu 14.04:

$ sudo add-apt-repository ppa:geonode/testing # (will be ppa:geonode/release then the 2.4 final is out)
$ sudo apt-get update
$ sudo apt-get install geonode
$ geonode createsuperuser

The next step is to get and install the Landscape GeoPortal code using git:
$ git clone https://github.com/terranodo/landscapeportal
$ sudo pip install -e landscapeportal

# TODO nginx + gunicorn configuration


Installation in development mode
================================

It is suggested to work in a virtualenv and install GeoNode in development mode.
Then clone the Landscape GeoPortal and install in the virtualenv
$ git clone https://github.com/terranodo/landscapeportal
$ pip install -e landscapeportal

A good setup could be to have geonode and landscapeportal at the same level in the virtualenv
virtualenv
- geonode
- landscapeportal

so that we can run geoserver in the geonode folder with:

.. code-block:: console

    $ paver start_geoserver


and Landscape GeoPortal in the landcapeportal after uncommenting the development database settings https://github.com/terranodo/landscapeportal/blob/master/landscapeportal/master/settings.py#L27:

.. code-block:: console

    $ python manage.py syncdb
    $ python manage.py runserver


Landscape GeoPortal ships by default the “Master” site and is the one ran on port 8000 by runserver.


How to create slave sites
-------------------------

From the master site’s admin panel it’s possible to add the new site at http://localhost:8000/admin/sites/site/add/. The “master” site has the ID = 1 and every subsequent site will have the ID increased by 1.

In the landscapeportal folder there is a template folder for slave sites named “site1”, it is possible to copy that folder for every slave site changing the name and the SITE_ID and the SITE_NAME to match the id and Display Name of the site created in the admin.

To start the new site run another instance of the Django development server pointing to the correct settings and binding it to another port with:
$ python manage.py runserver 8001 --settings=landscapeportal.siteXXXX.settings

The new site will be available at http://localhost:8001.


How to run tests
----------------

Geosites comes with a specific set of unit tests that make sure that the sites filtering functionality is respected. To run them make sure to not have geoserver running then simply run:

.. code-block:: console

    $ python manage.py test geosites

